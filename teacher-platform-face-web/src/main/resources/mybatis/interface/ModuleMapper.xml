<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hx.external.mapper.ModuleMapper">

    <resultMap id="BaseResultMap" type="com.hx.external.domain.Module">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="project_type" jdbcType="VARCHAR" property="projectType" />
        <result column="remakes" jdbcType="VARCHAR" property="remakes" />
    </resultMap>


    <sql id="Base_Column_List">
      id, project_name, project_type, remakes
    </sql>


    <delete id="delete" parameterType="java.lang.Integer">
      delete from int_module
      where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteModule" parameterType="com.hx.external.domain.Module">
        delete from int_module
        <include refid="findPageWithWhere" />
    </delete>

    <delete id="deleteByIds" parameterType="java.lang.Integer">
        delete from int_module
        where id in
        <foreach collection="array"  item="item" open="(" separator="," close=")"  >
            #{item}
        </foreach>
    </delete>


    <insert id="insert" parameterType="com.hx.external.domain.Module">
      insert into int_module (id, project_name, project_type,
        remakes)
      values (#{id,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{projectType,jdbcType=VARCHAR},
        #{remakes,jdbcType=VARCHAR})
    </insert>


    <insert id="insertDynamic" parameterType="com.hx.external.domain.Module">
        insert into int_module
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectName != null">
                project_name,
            </if>
            <if test="projectType != null">
                project_type,
            </if>
            <if test="remakes != null">
                remakes,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectName != null">
                #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectType != null">
                #{projectType,jdbcType=VARCHAR},
            </if>
            <if test="remakes != null">
                #{remakes,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateDynamic" parameterType="com.hx.external.domain.Module">
        update int_module
        <set>
            <if test="projectName != null">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectType != null">
                project_type = #{projectType,jdbcType=VARCHAR},
            </if>
            <if test="remakes != null">
                remakes = #{remakes,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="update" parameterType="com.hx.external.domain.Module">
  update int_module
  set project_name = #{projectName,jdbcType=VARCHAR},
    project_type = #{projectType,jdbcType=VARCHAR},
    remakes = #{remakes,jdbcType=VARCHAR}
  where id = #{id,jdbcType=INTEGER}
</update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  int_module
        where id = #{id,jdbcType=INTEGER}
    </select>


    <select id="selectModule" parameterType="com.hx.external.domain.Module" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  int_module
        <where> 1=1
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="projectName != null and projectName != ''" >
                and project_name LIKE concat(concat('%',#{projectName}),'%')
            </if>
            <if test="projectType != null and projectType != ''" >
                and project_type = #{projectType,jdbcType=VARCHAR}
            </if>
            <if test="remakes != null and remakes != ''" >
                and remakes = #{remakes,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="listType" parameterType="com.hx.external.domain.Module" resultMap="BaseResultMap">
        select distinct `project_type`
        from  int_module
    </select>

    <select id="selectByModule" resultType="com.hx.external.domain.Module">
        select
        <include refid="Base_Column_List"></include>
        from int_module
        <include refid="findPageWithWhere"></include>
    </select>

    <select id="list" resultType="com.hx.external.domain.ModuleDTO">
        select
        <include refid="Base_Column_List"></include>
        from int_module
        <include refid="findPageWithWhere"></include>
        order by `id`
        <if test="offset != null and limit != null">
            limit  #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*)
        from int_module
        <include refid="findPageWithWhere"></include>
    </select>



    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="projectName != null and projectName != ''" >
                and project_name = #{projectName,jdbcType=VARCHAR}
            </if>
            <if test="projectType != null and projectType != ''" >
                and project_type = #{projectType,jdbcType=VARCHAR}
            </if>
            <if test="remakes != null and remakes != ''" >
                and remakes = #{remakes,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

</mapper>