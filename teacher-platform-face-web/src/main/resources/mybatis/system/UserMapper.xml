<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hx.system.dao.UserDao">
	<sql id="SqlWhere">
		<where>
			<if test="organization != null and organization != ''"> and organization = #{organization} </if>
			<if test="userId != null and userId != ''"> and user_id = #{userId} </if>
			<if test="username != null and username != ''"> and username = #{username} </if>
			<if test="name != null and name != ''">and `name`= #{name} </if>
			<if test="password != null and password != ''"> and password = #{password} </if>
			<if test="schoolCode != null and schoolCode != ''"> and school_code = #{schoolCode} </if>
			<if test="schoolName != null and schoolName != ''"> and school_name = #{schoolName} </if>
			<if test="email != null and email != ''"> and email = #{email} </if>
			<if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
			<if test="status != null and status != ''"> and status = #{status} </if>
			<if test="userIdCreate != null and userIdCreate != ''"> and user_id_create = #{userIdCreate} </if>
			<if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
			<if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
			<if test="sex != null and sex != ''"> and sex = #{sex} </if>
			<if test="birth != null and birth != ''"> and birth = #{birth} </if>
			<if test="liveAddress != null and liveAddress != ''"> and live_address = #{liveAddress} </if>
			<if test="hobby != null and hobby != ''"> and hobby = #{hobby} </if>
			<if test="province != null and province != ''"> and province = #{province} </if>
			<if test="city != null and city != ''"> and city = #{city} </if>
			<if test="district != null and district != ''"> and district = #{district} </if>
		</where>
	</sql>
	<sql id="SqlWhereLike">
		<where>
			1 = 1
			<if test="organization != null and organization != ''"> and organization = #{organization} </if>
			<if test="name != null and name != ''">and `name` LIKE concat(concat('%',#{name}),'%')</if>
			<if test="username != null and username != ''"> and username = #{username} </if>
		</where>
	</sql>

	<select id="get" resultType="com.hx.domain.UserDO">
		select `user_id`,`organization`,`username`,`name`,`password`,`school_code`,`school_name`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_url`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = #{userId}
	</select>

	<select id="list" resultType="com.hx.vo.UserVO">
		select `user_id`,`organization`,`username`,`name`,`school_code`,`school_name`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_url`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user
		<include refid="SqlWhereLike"></include>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by user_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

 	<select id="count" resultType="java.lang.Integer">
		select count(*) from sys_user
		<include refid="SqlWhereLike"></include>
	</select>
	 
	<insert id="save" parameterType="com.hx.domain.UserDO" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			<if test="organization != null and organization != ''">`organization`,</if>
			`username`, 
			`name`, 
			`password`, 
			`school_code`, 
			`school_name`,
			`email`,
			`mobile`, 
			`status`, 
			`user_id_create`, 
			`gmt_create`, 
			`gmt_modified`, 
			`sex`, 
			`birth`, 
			`pic_url`, 
			`live_address`, 
			`hobby`, 
			`province`, 
			`city`, 
			`district`
		)
		values
		(
			<if test="organization != null and organization != ''">#{organization}, </if>
			#{username}, 
			#{name}, 
			#{password}, 
			#{schoolCode}, 
			#{schoolName},
			#{email},
			#{mobile}, 
			#{status}, 
			#{userIdCreate}, 
			#{gmtCreate}, 
			#{gmtModified}, 
			#{sex}, 
			#{birth}, 
			#{picUrl}, 
			#{liveAddress}, 
			#{hobby}, 
			#{province}, 
			#{city}, 
			#{district}
		)
	</insert>
	 
	<update id="update" parameterType="com.hx.domain.UserDO">
		update sys_user 
		<set>
			<if test="organization != null">`organization` = #{organization}, </if>
			<if test="username != null">`username` = #{username}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="schoolCode != null">`school_code` = #{schoolCode}, </if>
			<if test="schoolName != null">`school_name` = #{schoolName}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userIdCreate != null">`user_id_create` = #{userIdCreate}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}, </if>
			<if test="sex != null">`sex` = #{sex}, </if>
			<if test="birth != null">`birth` = #{birth}, </if>
			<if test="picUrl != null">`pic_url` = #{picUrl}, </if>
			<if test="liveAddress != null">`live_address` = #{liveAddress}, </if>
			<if test="hobby != null">`hobby` = #{hobby}, </if>
			<if test="province != null">`province` = #{province}, </if>
			<if test="city != null">`city` = #{city}, </if>
			<if test="district != null">`district` = #{district}</if>
		</set>
		where user_id = #{userId}
	</update>
	
	<delete id="remove">
		delete from sys_user where user_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="listAllDept" >
				select DISTINCT school_code from sys_user
	</select>


	<select id="login" resultType="com.hx.domain.UserDO">
		SELECT
			su.*,sr.role_sign,sr.permission
		FROM
			sys_user su
		LEFT JOIN sys_user_role sur ON su.user_id = sur.user_id
		LEFT JOIN sys_role sr ON sur.role_id = sr.role_id
		where su.username = #{username}
	</select>

	<select id="queryNotAdminAndOrgAdminByOrg" resultType="com.hx.vo.UserVO">
		SELECT
			*
		FROM
			sys_user
		WHERE
			user_id NOT IN (
				SELECT DISTINCT
					sur.user_id
				FROM
					sys_user_role sur
				LEFT JOIN sys_role sr ON sur.role_id = sr.role_id
				WHERE
					sr.role_sign = 'admin'
				OR sr.role_sign = 'orgAdmin'
			)
		AND organization = #{organization}
		<if test="name != null and name != ''">and `name` LIKE concat(concat('%',#{name}),'%')</if>
		<if test="username != null and username != ''"> and username = #{username} </if>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="countNotAdminAndOrgAdminByOrg" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM
			sys_user
		WHERE
			user_id NOT IN (
				SELECT DISTINCT
				sur.user_id
				FROM
				sys_user_role sur
				LEFT JOIN sys_role sr ON sur.role_id = sr.role_id
				WHERE
				sr.role_sign = 'admin'
				OR sr.role_sign = 'orgAdmin'
			)
		AND organization = #{organization}
		<if test="name != null and name != ''">and `name` LIKE concat(concat('%',#{name}),'%')</if>
		<if test="username != null and username != ''"> and username = #{username} </if>
	</select>
	<select id="exit" resultType="java.lang.Integer">
		SELECT COUNT(*) from sys_user where username = #{username}
	</select>
	<select id="queryByIds" resultType="com.hx.domain.UserDO">
		select `user_id`,`organization`,`username`,`name`,`password`,`school_code`,`school_name`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_url`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user
		where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</select>
</mapper>