bootdo:
  uploadPath: http://113.57.172.27:8888/
  path: http://localhost:8899${server.servlet.context-path}
logging:
  level:
    root: info
    com.hx: debug
spring:
  mail:
    host: smtp.huixiangtech.cn
    username: xuyuanjie@huixiangtech.cn
    password: 0.1.2.3.yuan
    default-encoding: utf-8
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.10.57:3306/huixiang?useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true
    username: root
    password:
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  redis:
    database: 15
    host: 192.168.10.182
    port: 6379
    password: Abc12345
    # 连接超时时间（毫秒）
    timeout: 10000
    jedis:
      pool:
        max-idle: 8
        # 连接池中的最大空闲连接
        # 连接池中的最小空闲连接
        min-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
mail:
  fromMail:
    addr: xuyuanjie@huixiangtech.cn
#分布式事务 -- manager地址
#tx-lcn:
#  client:
#    manager-address: 127.0.0.1:8070
#注册中心地址
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://127.0.0.1:8761/eureka/
fdfs:
  server: 113.57.172.27
  storage: ${fdfs.server}
  so-timeout: 1501
  connect-timeout: 601
  thumb-image:             #缩略图生成参数
    width: 200
    height: 200
  tracker-list:            #TrackerList参数,支持多个
  - ${fdfs.server}:22122
  http-addr: ${fdfs.server}:8888 # http访问的端口和地址
#cas:
#  server-url-prefix: http://127.0.0.1:9080/cas
#  server-login-url: http://127.0.0.1:9090/cas/login
#  client-host-url: http://localhost:8080
#  validation-type: CAS

#cas client config
#spring:
#  cas:
#    sign-out-filters: /logout
#    auth-filters: /*
#    validate-filters: /*
#    request-wrapper-filters: /*
#    assertion-filters: /*
#    cas-server-login-url: cas登录url
#    cas-server-url-prefix: cas登录域名
#    redirect-after-validation: true
#    use-session: true
#    server-name: http://localhost:8080